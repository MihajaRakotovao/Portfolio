@mixin tout(){
    *{
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }
}

@font-face {
    font-family: 'MonL';
    src: url(../../assets/fonts/Montserrat-Light.otf);
}

@font-face {
    font-family: 'MonR';
    src: url(./../assets/fonts/Montserrat-Regular.otf);
}
@font-face {
    font-family: 'MonT';
    src: url(./../assets/fonts/Montserrat-Thin.otf);
}

//width and Height 
@mixin taille($w,$h){
    width: $w;
    height: $h;
}
// Position Sticky
@mixin sticky{
    position: sticky;
    top: 0;
    z-index: 8;
}
// Display
@mixin flexbox($flex,$fd,$al,$jc){
    display: $flex;
    flex-direction: $fd;
    align-items: $al;
    justify-content: $jc;
    list-style: none;
}
// row
@mixin row{
    @include flexbox(flex,row,center,space-around);
}

// column
@mixin col{
    @include flexbox(flex,column,center,space-around);
}

//  transition
@mixin transition{
    transition: all 1s;
}
// Box Shadow
@mixin BoxSha($color){
    box-shadow: 0px 10px 10px 0px $color !important;
}
// Backdrop filter
@mixin BacF($v){
    backdrop-filter: blur($v) !important;
}

// text
@mixin txt($color,$fs,$ff){
    color: $color;
    font-size: $fs;
    font-family: $ff;
}
// li
@mixin li{
    font-size: 18px;
    font-family: 'arial';
    text-decoration: none;
    text-transform: none;
    color: aliceblue;
    font-family: 'TitiRegular';
}

// before info
@mixin beforeI{
    content: '';
    position: absolute;
    top: 3px;
    left: 0;
    width: 10px;
    height: 10px;
    background-color: var(--mena);
    border-radius: 50%;
}
// after info
@mixin afterI{
    content: '';
    position: absolute;
    top: 10px;
    left: 4px;
    width: 2px;
    height: 90%;
    background-color: var(--mena);
}
// Margin
@mixin marg($t:0,$l:0){
    margin: $t $l;
}
@mixin margin($t,$l,$r,$b){
    margin-top: $t;
    margin-left: $l;
    margin-right: $r;
    margin-bottom: $b;
}
// Padding
@mixin pad($t:0,$l:0){
    padding: $t $l;
}
@mixin padding($t:0,$l:0,$r:0,$b:0){
    padding-top: $t;
    padding-left: $l;
    padding-right: $r;
    padding-bottom: $b;
}
// Animation
@mixin anime($nom,$s,$t,$b){
    animation-name: $nom;
    animation-duration: $s;
    animation-timing-function: $t;
    animation-delay: $b;
}
// Border Radius
@mixin borderR($v){
    border-radius: $v;
}
// Rond
@mixin borderRo($v,$t){
    border-radius: $v $t;
}
// Overflow
@mixin over{
    overflow-x: hidden;
}
@mixin overfl{
    overflow: hidden;
}

// box shadow
@mixin boxSh($bs){
    box-shadow: 2px 2px 10px $bs;

}
// Text Align
@mixin Talign($ai){
    text-align: $ai;
}

// Grid
@mixin grid($a,$b){
    display: grid;
    grid-template-columns: repeat($a, 1fr);
    grid-gap :$b;
}



@mixin transform ($transform){
    transform: $transform;
    -moz-transform: $transform;
    -o-transform:   $transform ;
    -webkit-transform: $transform;
    -ms-transform: $transform;
}
@mixin scale($scale){
    @include transform(scale($scale));
    cursor: pointer;
}
@mixin rotate ($rotate){
    @include transform(rotate($rotate))
}



// responsive
@mixin breakpoint($breakpoint, $direction: min){
    @if map-has-key($breakpoints , $breakpoint ){
        $breakpoint-values: map-get($breakpoints , $breakpoint );
        $breakpoint-min: map-get($breakpoint-values, min);
        $breakpoint-max: map-get($breakpoint-values, max);

        @if $direction == min{
            @media (min-width: $breakpoint-min){
                @content;
            }
        }
        @else{
            @media (max-width: $breakpoint-max){
                @content;
            }
        }
    }@else{

        @if $direction == min{
            @media (min-width: $breakpoint){
                @content;
            }
        }
        @else{
            @media (max-width: $breakpoint){
                @content;
            }
        }
    }
}